{"slideHeight":768,
"filename":"4 - Console Input/Output",
"navigatorEvents":[{"eventName":"Slide 1",
"eventIndex":0}
,{"eventName":"Slide 2",
"eventIndex":1}
,{"eventName":"Slide 3",
"eventIndex":2}
,{"eventName":"Slide 4",
"eventIndex":3}
,{"eventName":"Slide 5",
"eventIndex":4}
,{"eventName":"Slide 6",
"eventIndex":5}
,{"eventName":"Slide 7",
"eventIndex":6}
,{"eventName":"Slide 8",
"eventIndex":7}
,{"eventName":"Slide 9",
"eventIndex":8}
,{"eventName":"Slide 10",
"eventIndex":9}
,{"eventName":"Slide 11",
"eventIndex":10}
,{"eventName":"Slide 12",
"eventIndex":11}
,{"eventName":"Slide 13",
"eventIndex":12}
,{"eventName":"Slide 14",
"eventIndex":13}
,{"eventName":"Slide 15",
"eventIndex":14}
,{"eventName":"Slide 16",
"eventIndex":15}
,{"eventName":"Slide 17",
"eventIndex":16}
,{"eventName":"Slide 18",
"eventIndex":17}
]
,
"textures":{"s15.b":{"url":"images-1/s15.b.jpeg",
"width":1024,
"height":768}
,
"s6.a":{"url":"images-1/s5.b.jpeg",
"width":1024,
"height":768}
,
"s12.a":{"url":"images-1/s11.b.jpeg",
"width":1024,
"height":768}
,
"s18.a":{"url":"images-1/s17.b.jpeg",
"width":1024,
"height":768}
,
"s2.b":{"url":"images-1/s2.b.jpeg",
"width":1024,
"height":768}
,
"thumbnail":{"url":"images-1/thumbnail.jpeg",
"width":458,
"height":344}
,
"s8.a":{"url":"images-1/s7.b.jpeg",
"width":1024,
"height":768}
,
"s4.b":{"url":"images-1/s4.b.jpeg",
"width":1024,
"height":768}
,
"s14.b":{"url":"images-1/s14.b.jpeg",
"width":1024,
"height":768}
,
"s17.a":{"url":"images-1/s16.b.jpeg",
"width":1024,
"height":768}
,
"s11.a":{"url":"images-1/s10.b.jpeg",
"width":1024,
"height":768}
,
"s6.b":{"url":"images-1/s6.b.jpeg",
"width":1024,
"height":768}
,
"s1.a":{"url":"images-1/s1.a.jpeg",
"width":1024,
"height":768}
,
"s13.b":{"url":"images-1/s13.b.jpeg",
"width":1024,
"height":768}
,
"s8.b":{"url":"images-1/s8.b.jpeg",
"width":1024,
"height":768}
,
"s10.a":{"url":"images-1/s9.b.jpeg",
"width":1024,
"height":768}
,
"s3.a":{"url":"images-1/s2.b.jpeg",
"width":1024,
"height":768}
,
"s16.a":{"url":"images-1/s15.b.jpeg",
"width":1024,
"height":768}
,
"s5.a":{"url":"images-1/s4.b.jpeg",
"width":1024,
"height":768}
,
"s18.b":{"url":"images-1/s18.b.png",
"width":1024,
"height":768}
,
"s12.b":{"url":"images-1/s12.b.jpeg",
"width":1024,
"height":768}
,
"s1.b":{"url":"images-1/s1.b.jpeg",
"width":1024,
"height":768}
,
"s15.a":{"url":"images-1/s14.b.jpeg",
"width":1024,
"height":768}
,
"s7.a":{"url":"images-1/s6.b.jpeg",
"width":1024,
"height":768}
,
"s3.b":{"url":"images-1/s3.b.jpeg",
"width":1024,
"height":768}
,
"s17.b":{"url":"images-1/s17.b.jpeg",
"width":1024,
"height":768}
,
"s11.b":{"url":"images-1/s11.b.jpeg",
"width":1024,
"height":768}
,
"s9.a":{"url":"images-1/s8.b.jpeg",
"width":1024,
"height":768}
,
"s14.a":{"url":"images-1/s13.b.jpeg",
"width":1024,
"height":768}
,
"s5.b":{"url":"images-1/s5.b.jpeg",
"width":1024,
"height":768}
,
"s7.b":{"url":"images-1/s7.b.jpeg",
"width":1024,
"height":768}
,
"s2.a":{"url":"images-1/s1.b.jpeg",
"width":1024,
"height":768}
,
"s10.b":{"url":"images-1/s10.b.jpeg",
"width":1024,
"height":768}
,
"s16.b":{"url":"images-1/s16.b.jpeg",
"width":1024,
"height":768}
,
"s13.a":{"url":"images-1/s12.b.jpeg",
"width":1024,
"height":768}
,
"s9.b":{"url":"images-1/s9.b.jpeg",
"width":1024,
"height":768}
,
"s4.a":{"url":"images-1/s3.b.jpeg",
"width":1024,
"height":768}
}
,
"title":"4 - Console Input/Output",
"minorVersion":4,
"timestamp":"2013-01-24 11:14:36",
"slideWidth":1024,
"eventTimelines":[{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s1.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s1.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s1.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s1.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s1.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s1.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":289,
"width":766,
"x":129,
"height":96}
,
"text":"Console Input/Output"}
,{"targetRectangle":{"y":400,
"width":164,
"x":430,
"height":38}
,
"text":"Ryan Nixon"}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s2.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s2.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s2.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s2.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s2.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s2.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":68,
"width":450,
"x":287,
"height":96}
,
"text":"The Console"}
,{"targetRectangle":{"y":230,
"width":752,
"x":134,
"height":213}
,
"text":"Think of the console as whatever tool you are using to build and run your program. It is the easiest way for the program to communicate with a user"}
,{"targetRectangle":{"y":442,
"width":779,
"x":134,
"height":171}
,
"text":"In NetBeans the console is the Output window. In Powershell it is the same window that you run your commands in"}
,{"targetRectangle":{"y":612,
"width":741,
"x":134,
"height":44}
,
"text":"The textbook simply refers to it as the Screen"}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s3.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s3.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s3.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s3.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s3.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s3.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":68,
"width":396,
"x":314,
"height":96}
,
"text":"System.out"}
,{"targetRectangle":{"y":284,
"width":776,
"x":134,
"height":226}
,
"text":"To output to the console you use a special object called System.out. This is a variable in the System class that is always defined for every program upon startup"}
,{"targetRectangle":{"y":510,
"width":786,
"x":134,
"height":92}
,
"text":"System.out like any other object has a number of methods available to it"}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s4.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s4.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s4.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s4.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s4.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s4.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":68,
"width":276,
"x":374,
"height":96}
,
"text":"println()"}
,{"targetRectangle":{"y":289,
"width":649,
"x":134,
"height":124}
,
"text":"System.out.println(“Hello ” + “World”);"}
,{"targetRectangle":{"y":413,
"width":786,
"x":134,
"height":184}
,
"text":"We’ve already seen println() before. This method prints the given string (or other object in string format) to the console followed by a newline character"}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s5.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s5.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s5.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s5.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s5.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s5.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":68,
"width":214,
"x":405,
"height":96}
,
"text":"print()"}
,{"targetRectangle":{"y":224,
"width":624,
"x":134,
"height":63}
,
"text":"System.out.print(“Continue? [Y/n]: “);"}
,{"targetRectangle":{"y":286,
"width":786,
"x":134,
"height":138}
,
"text":"Print works exactly like println() except that it excludes the newline character. This allows additional text to be placed on the same line before going to the next one"}
,{"targetRectangle":{"y":423,
"width":742,
"x":134,
"height":134}
,
"text":"This line is equivalent to the println() version of the above code, using the newline escape character:\u2028System.out.print(“Continue? [Y/n]: \\n”);"}
,{"targetRectangle":{"y":556,
"width":767,
"x":134,
"height":106}
,
"text":"print() is commonly used when pulling keyboard input from the console, as it allows your program to ask the user a question and have them type the answer on the same line"}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s6.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s6.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s6.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s6.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s6.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s6.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":68,
"width":236,
"x":394,
"height":96}
,
"text":"printf()"}
,{"targetRectangle":{"y":222,
"width":786,
"x":134,
"height":91}
,
"text":"System.out.printf(“That %s costs $%6.2f.”, fruit, cost);"}
,{"targetRectangle":{"y":312,
"width":786,
"x":134,
"height":160}
,
"text":"Sometimes you will need to print a large number of variables to the console or have strict requirements about how they are output. printf() allows for “Formatting” your string before it is printed"}
,{"targetRectangle":{"y":471,
"width":786,
"x":134,
"height":193}
,
"text":"printf() uses the % sign much like strings use the \\ escape character. % is a placeholder for a variable that will be inserted later. For example:\u2028%s - A string variable\u2028%f - A floating-point variable\u2028%d - An integer"}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s7.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s7.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s7.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s7.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s7.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s7.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":68,
"width":236,
"x":394,
"height":96}
,
"text":"printf()"}
,{"targetRectangle":{"y":226,
"width":786,
"x":134,
"height":220}
,
"text":"printf() does not specify parameters. Instead, the first parameter should be a format string containing the text you want to output. Additional parameters beyond the first designate replacements in the string in the order they appear."}
,{"targetRectangle":{"y":445,
"width":772,
"x":134,
"height":104}
,
"text":"System.out.printf(“First param: %s. Second param: %s”, first, second);"}
,{"targetRectangle":{"y":548,
"width":781,
"x":134,
"height":112}
,
"text":"If the type of the variable is different than what the format string declares it to be, then Java will attempt to coerce the variable to the new type"}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s8.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s8.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s8.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s8.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s8.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s8.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":68,
"width":236,
"x":394,
"height":96}
,
"text":"printf()"}
,{"targetRectangle":{"y":222,
"width":774,
"x":134,
"height":118}
,
"text":"The format string also supports a number of options such as the field. The field designates how many spaces the variable will take up, regardless of what’s in the variable"}
,{"targetRectangle":{"y":339,
"width":759,
"x":134,
"height":88}
,
"text":"The field allows for “pretty printed” text where everything nicely lines up regardless of its length"}
,{"targetRectangle":{"y":426,
"width":792,
"x":134,
"height":118}
,
"text":"You define the field between the % character and the type declaration:\u2028%6s - A string with a field of 6 (“    hi”)\u2028%3d - A number with a field of 3 (“ 97”)"}
,{"targetRectangle":{"y":543,
"width":787,
"x":134,
"height":121}
,
"text":"Note that the field will not be enforced if the length of the variable is larger than it. Overflows are dealt with by extending the field to match:\u2028%3s for “Hi” will display “ Hi”\u2028%3s for “Hello” will display “Hello”"}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s9.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s9.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s9.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s9.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s9.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s9.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":68,
"width":236,
"x":394,
"height":96}
,
"text":"printf()"}
,{"targetRectangle":{"y":229,
"width":786,
"x":134,
"height":256}
,
"text":"The textbook mentions a few more things that printf() is capable of such as assigned decimal point length and declaring which % goes to which parameter. It’s in your best interest to look these over"}
,{"targetRectangle":{"y":484,
"width":786,
"x":134,
"height":173}
,
"text":"Note that many languages use string formatting differently. To name a few, the C, C++ & Java worlds generally use “%s” and “%d”, but C# and Python prefer strings such as “{!s}” or “{:f}”."}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s10.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s10.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s10.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s10.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s10.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s10.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":24,
"width":657,
"x":194,
"height":184}
,
"text":"Reading From The Console"}
,{"targetRectangle":{"y":238,
"width":786,
"x":134,
"height":180}
,
"text":"Rather than defining variables such as the decimal geographic coordinates from the drill, it is often easier just to ask the user for input"}
,{"targetRectangle":{"y":418,
"width":752,
"x":134,
"height":230}
,
"text":"When dealing with user input though you should always keep in mind, “Garbage in, garbage out.” If you let the user type nonsense into the console that’s liable to be what your program produces"}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s11.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s11.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s11.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s11.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s11.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s11.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":68,
"width":348,
"x":338,
"height":96}
,
"text":"System.in"}
,{"targetRectangle":{"y":231,
"width":786,
"x":134,
"height":126}
,
"text":"System.in is a special object in the System class just like System.out"}
,{"targetRectangle":{"y":356,
"width":765,
"x":134,
"height":127}
,
"text":"It provides methods for reading in text from the console and placing them in variables"}
,{"targetRectangle":{"y":482,
"width":784,
"x":134,
"height":173}
,
"text":"Due to the variety of things that can be passed in from the console (think strings, integers, floating point numbers, dates & times, URLs, etc.) Java provides a class to help with this input"}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s12.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s12.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s12.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s12.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s12.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s12.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":68,
"width":298,
"x":363,
"height":96}
,
"text":"Scanner"}
,{"targetRectangle":{"y":224,
"width":758,
"x":134,
"height":137}
,
"text":"Scanners take a provided input (in this case System.in, an InputStream object) and assist in reading from and validating that input"}
,{"targetRectangle":{"y":360,
"width":403,
"x":134,
"height":99}
,
"text":"It is declared just like a String:\u2028Scanner keyboard;"}
,{"targetRectangle":{"y":458,
"width":690,
"x":134,
"height":134}
,
"text":"But initialized like a real object (remember that String generally uses “” instead):\u2028Scanner keyboard = new Scanner();"}
,{"targetRectangle":{"y":591,
"width":781,
"x":134,
"height":71}
,
"text":"You will see this new keyword any time that you instantiate a brand new object; we’ll cover this in a later chapter"}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s13.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s13.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s13.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s13.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s13.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s13.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":68,
"width":298,
"x":363,
"height":96}
,
"text":"Scanner"}
,{"targetRectangle":{"y":239,
"width":793,
"x":134,
"height":146}
,
"text":"When using Scanner you will also need to include this line at the top of your file, above the class { } definition:\u2028import java.util.Scanner;"}
,{"targetRectangle":{"y":384,
"width":777,
"x":134,
"height":188}
,
"text":"As Scanner is a helper utility many programs likely won’t use it. To that end it is not accessible by default. The import line tells Java where the Scanner is and that your class should be able to use it."}
,{"targetRectangle":{"y":571,
"width":722,
"x":134,
"height":77}
,
"text":"This is related to packages, something that will be covered in a later lecture"}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s14.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s14.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s14.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s14.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s14.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s14.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":68,
"width":298,
"x":363,
"height":96}
,
"text":"Scanner"}
,{"targetRectangle":{"y":229,
"width":786,
"x":134,
"height":232}
,
"text":"Scanners require a parameter upon initialization to tell them what input they will be scanning. Just like calling a method, you place this parameter in the parentheses:\u2028Scanner keyboard = new Scanner(System.in);"}
,{"targetRectangle":{"y":460,
"width":781,
"x":134,
"height":117}
,
"text":"keyboard is now an instance of the Scanner class, or an object if you prefer"}
,{"targetRectangle":{"y":576,
"width":702,
"x":134,
"height":81}
,
"text":"You can then call all the methods that Scanners provide on System.in using this keyboard object"}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s15.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s15.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s15.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s15.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s15.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s15.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":68,
"width":632,
"x":196,
"height":96}
,
"text":"Scanner Methods"}
,{"targetRectangle":{"y":223,
"width":786,
"x":134,
"height":207}
,
"text":"To actually use the Scanner you call its methods. These methods will automatically interact with whatever the object is referencing (System.in in this case) and perform all necessary actions to validate and return what you are asking for"}
,{"targetRectangle":{"y":429,
"width":714,
"x":134,
"height":95}
,
"text":"Scanner keyboard = new Scanner(System.in);\u2028String line = keyboard.nextLine();"}
,{"targetRectangle":{"y":523,
"width":761,
"x":134,
"height":141}
,
"text":"The nextLine() method used above is probably the most common method you will use. It requests a string from the user and waits until they hit Return on the keyboard before returning all that they entered as a String."}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s16.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s16.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s16.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s16.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s16.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s16.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":68,
"width":632,
"x":196,
"height":96}
,
"text":"Scanner Methods"}
,{"targetRectangle":{"y":224,
"width":364,
"x":134,
"height":66}
,
"text":"You can also type your input:"}
,{"targetRectangle":{"y":289,
"width":533,
"x":134,
"height":172}
,
"text":"keyboard.nextInt() returns an integer\u2028keyboard.nextLong() returns a long\u2028keyboard.nextFloat() returns a float\u2028etc."}
,{"targetRectangle":{"y":460,
"width":779,
"x":134,
"height":134}
,
"text":"These methods require that the user type something specific. If a user attempts to write normal text (a String) but an integer is requested, Scanner will error"}
,{"targetRectangle":{"y":593,
"width":661,
"x":134,
"height":69}
,
"text":"We’ll see how to handle these errors when we get to Exceptions later in the semester"}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s17.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s17.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s17.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s17.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s17.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s17.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":68,
"width":632,
"x":196,
"height":96}
,
"text":"Scanner Methods"}
,{"targetRectangle":{"y":230,
"width":744,
"x":134,
"height":177}
,
"text":"next() is also a useful method. It requests input from the user until a specific character (the delimiter) is typed. It then returns everything up to but not including that delimiter"}
,{"targetRectangle":{"y":406,
"width":775,
"x":134,
"height":106}
,
"text":"nextLine() is simply next() with the newline \\n character as the delimiter"}
,{"targetRectangle":{"y":511,
"width":786,
"x":134,
"height":145}
,
"text":"The default delimiter is whitespace (space, tab, newline) but this can be changed by calling the useDelimiter(String) method with the first parameter whatever character you would like to separate your input with"}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s18.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s18.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s18.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s18.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s18.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s18.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":68,
"width":632,
"x":196,
"height":96}
,
"text":"Scanner Methods"}
,{"targetRectangle":{"y":351,
"width":747,
"x":134,
"height":184}
,
"text":"There are some potentially unexpected behaviors when mixing the different next() methods Scanner offers. Let’s experiment a bit to see"}
]
}
]
,
"loopSlideshow":0,
"showMode":0,
"majorVersion":0,
"notes":{}
,
"creator":"Apple Keynote 5.3",
"author":"",
"comment":"",
"pageCount":18,
"scalefactor480":0.3310547,
"slideCount":18}
