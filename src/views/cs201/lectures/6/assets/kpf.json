{"slideHeight":768,
"filename":"6 - Looping/Iterative Structures",
"navigatorEvents":[{"eventName":"Slide 1",
"eventIndex":0}
,{"eventName":"Slide 2",
"eventIndex":1}
,{"eventName":"Slide 3",
"eventIndex":2}
,{"eventName":"Slide 4",
"eventIndex":3}
,{"eventName":"Slide 5",
"eventIndex":4}
,{"eventName":"Slide 6",
"eventIndex":5}
,{"eventName":"Slide 7",
"eventIndex":6}
,{"eventName":"Slide 8",
"eventIndex":7}
,{"eventName":"Slide 9",
"eventIndex":8}
,{"eventName":"Slide 10",
"eventIndex":9}
,{"eventName":"Slide 11",
"eventIndex":10}
,{"eventName":"Slide 12",
"eventIndex":11}
,{"eventName":"Slide 13",
"eventIndex":12}
,{"eventName":"Slide 14",
"eventIndex":13}
,{"eventName":"Slide 15",
"eventIndex":14}
]
,
"textures":{"s2.b":{"url":"images-1/s2.b.jpeg",
"width":1024,
"height":768}
,
"s8.b":{"url":"images-1/s8.b.jpeg",
"width":1024,
"height":768}
,
"s12.b":{"url":"images-1/s12.b.jpeg",
"width":1024,
"height":768}
,
"s14.a":{"url":"images-1/s13.b.jpeg",
"width":1024,
"height":768}
,
"s5.a":{"url":"images-1/s4.b.jpeg",
"width":1024,
"height":768}
,
"s3.b":{"url":"images-1/s3.b.jpeg",
"width":1024,
"height":768}
,
"s9.b":{"url":"images-1/s9.b.jpeg",
"width":1024,
"height":768}
,
"s15.b":{"url":"images-1/s15.b.png",
"width":1024,
"height":768}
,
"s12.a":{"url":"images-1/s11.b.jpeg",
"width":1024,
"height":768}
,
"s6.a":{"url":"images-1/s5.b.jpeg",
"width":1024,
"height":768}
,
"s10.b":{"url":"images-1/s10.b.jpeg",
"width":1024,
"height":768}
,
"s4.b":{"url":"images-1/s4.b.jpeg",
"width":1024,
"height":768}
,
"s1.a":{"url":"images-1/s1.a.jpeg",
"width":1024,
"height":768}
,
"s7.a":{"url":"images-1/s6.b.jpeg",
"width":1024,
"height":768}
,
"s10.a":{"url":"images-1/s9.b.jpeg",
"width":1024,
"height":768}
,
"s13.b":{"url":"images-1/s13.b.jpeg",
"width":1024,
"height":768}
,
"s5.b":{"url":"images-1/s5.b.jpeg",
"width":1024,
"height":768}
,
"s15.a":{"url":"images-1/s14.b.jpeg",
"width":1024,
"height":768}
,
"thumbnail":{"url":"images-1/thumbnail.jpeg",
"width":458,
"height":344}
,
"s2.a":{"url":"images-1/s1.b.jpeg",
"width":1024,
"height":768}
,
"s8.a":{"url":"images-1/s7.b.jpeg",
"width":1024,
"height":768}
,
"s13.a":{"url":"images-1/s12.b.jpeg",
"width":1024,
"height":768}
,
"s11.b":{"url":"images-1/s11.b.jpeg",
"width":1024,
"height":768}
,
"s6.b":{"url":"images-1/s6.b.jpeg",
"width":1024,
"height":768}
,
"s3.a":{"url":"images-1/s2.b.jpeg",
"width":1024,
"height":768}
,
"s9.a":{"url":"images-1/s8.b.jpeg",
"width":1024,
"height":768}
,
"s1.b":{"url":"images-1/s1.b.jpeg",
"width":1024,
"height":768}
,
"s7.b":{"url":"images-1/s7.b.jpeg",
"width":1024,
"height":768}
,
"s11.a":{"url":"images-1/s10.b.jpeg",
"width":1024,
"height":768}
,
"s14.b":{"url":"images-1/s14.b.jpeg",
"width":1024,
"height":768}
,
"s4.a":{"url":"images-1/s3.b.jpeg",
"width":1024,
"height":768}
}
,
"title":"6 - Looping/Iterative Structures",
"minorVersion":4,
"timestamp":"2013-02-05 11:21:21",
"slideWidth":1024,
"eventTimelines":[{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s1.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s1.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s1.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s1.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s1.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s1.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":193,
"width":624,
"x":211,
"height":192}
,
"text":"Looping/Iterative Structures"}
,{"targetRectangle":{"y":400,
"width":164,
"x":430,
"height":38}
,
"text":"Ryan Nixon"}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s2.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s2.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s2.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s2.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s2.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s2.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":68,
"width":362,
"x":331,
"height":96}
,
"text":"Repetition"}
,{"targetRectangle":{"y":228,
"width":786,
"x":134,
"height":169}
,
"text":"While the branching statements allow you to skip code based on a condition, looping statements allow you to repeat code based on a condition"}
,{"targetRectangle":{"y":396,
"width":786,
"x":134,
"height":130}
,
"text":"These constructs are the while, do-while, for, and foreach statements."}
,{"targetRectangle":{"y":525,
"width":732,
"x":134,
"height":134}
,
"text":"We’ll cover everything except foreach today and discuss foreach when we get to Arrays later in the semester"}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s3.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s3.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s3.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s3.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s3.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s3.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":68,
"width":338,
"x":343,
"height":96}
,
"text":"The Loop"}
,{"targetRectangle":{"y":223,
"width":735,
"x":134,
"height":88}
,
"text":"Looping is not that hard of a concept to learn, but the potential of loops doesn’t always come as easily"}
,{"targetRectangle":{"y":310,
"width":176,
"x":134,
"height":59}
,
"text":"Just remember:"}
,{"targetRectangle":{"y":368,
"width":742,
"x":164,
"height":119}
,
"text":"Loops are for if you need to repeat code until something happens such as user input, a certain point in time, or a certain state of the program occurs"}
,{"targetRectangle":{"y":486,
"width":726,
"x":164,
"height":88}
,
"text":"Loops are also for if you have a list or other iterable variable and need to execute code against each item in the list"}
,{"targetRectangle":{"y":573,
"width":730,
"x":164,
"height":91}
,
"text":"Loops always need a reachable end condition. If the condition is not reachable then the loop will never end and your program will execute indefinitely (freeze)"}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s4.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s4.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s4.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s4.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s4.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s4.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":68,
"width":196,
"x":414,
"height":96}
,
"text":"While"}
,{"targetRectangle":{"y":225,
"width":336,
"x":132,
"height":125}
,
"text":"while (condition) {\u2028\taction;\u2028}"}
,{"targetRectangle":{"y":349,
"width":749,
"x":134,
"height":105}
,
"text":"This is the while loop. It will run anything within its scope (the braces) until the boolean condition becomes false"}
,{"targetRectangle":{"y":453,
"width":786,
"x":134,
"height":104}
,
"text":"There is nothing special about the condition. It is exactly like you would see in an if statement."}
,{"targetRectangle":{"y":556,
"width":777,
"x":134,
"height":106}
,
"text":"The same rules apply to if statements as well. You may run anything you want between the braces, including additional nested loops"}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s5.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s5.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s5.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s5.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s5.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s5.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":68,
"width":196,
"x":414,
"height":96}
,
"text":"While"}
,{"targetRectangle":{"y":225,
"width":293,
"x":132,
"height":109}
,
"text":"while (condition) {\u2028\taction;\u2028}"}
,{"targetRectangle":{"y":333,
"width":773,
"x":134,
"height":120}
,
"text":"A while loop will always check the condition first, similar to an if statement. If the condition is already false then the entire loop will be skipped"}
,{"targetRectangle":{"y":452,
"width":777,
"x":134,
"height":120}
,
"text":"After all actions in the braces have executed, the while loop will return to the condition and check it again. If it has become false then the loop will exit. Otherwise it will run the action again"}
,{"targetRectangle":{"y":571,
"width":749,
"x":134,
"height":91}
,
"text":"Always remember -- In your action code you must ensure that something will cause the condition to become false. Otherwise the loop will never exit."}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s6.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s6.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s6.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s6.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s6.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s6.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":68,
"width":196,
"x":414,
"height":96}
,
"text":"While"}
,{"targetRectangle":{"y":420,
"width":536,
"x":134,
"height":46}
,
"text":"Let’s jump to an example of this"}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s7.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s7.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s7.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s7.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s7.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s7.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":68,
"width":326,
"x":349,
"height":96}
,
"text":"Do-While"}
,{"targetRectangle":{"y":222,
"width":329,
"x":132,
"height":125}
,
"text":"do {\u2028\taction;\u2028} while (condition);"}
,{"targetRectangle":{"y":346,
"width":786,
"x":134,
"height":106}
,
"text":"The do-while loop is very similar to the while loop with one exception: the do-while loop always executes at least once"}
,{"targetRectangle":{"y":451,
"width":774,
"x":134,
"height":213}
,
"text":"Java hints at this by placing the condition check at the end of the code. At runtime the program will jump straight to the actions in the braces without caring about the while condition. When it reaches the end of the loop it checks the condition and, if the condition is true, returns to the top and executes again"}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s8.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s8.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s8.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s8.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s8.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s8.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":68,
"width":326,
"x":349,
"height":96}
,
"text":"Do-While"}
,{"targetRectangle":{"y":350,
"width":786,
"x":134,
"height":187}
,
"text":"The Latitude/Longitude class shouldn’t require some of the code that we had to write to get the user input. Lets look at how we can improve it with a do-while."}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s9.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s9.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s9.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s9.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s9.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s9.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":68,
"width":116,
"x":454,
"height":96}
,
"text":"For"}
,{"targetRectangle":{"y":226,
"width":786,
"x":134,
"height":117}
,
"text":"For loops are formatted a bit differently than the prior two loops, but they are substantially more powerful"}
,{"targetRectangle":{"y":342,
"width":786,
"x":134,
"height":198}
,
"text":"Think about a for loop like a while loop, because that’s actually exactly what it is. However the for loop makes it easier to define your start and end conditions"}
,{"targetRectangle":{"y":539,
"width":784,
"x":134,
"height":121}
,
"text":"The for loop (and similar construct, the foreach loop) are the most used loops in programming, so make sure you are comfortable with their use."}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s10.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s10.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s10.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s10.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s10.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s10.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":68,
"width":116,
"x":454,
"height":96}
,
"text":"For"}
,{"targetRectangle":{"y":222,
"width":513,
"x":132,
"height":93}
,
"text":"for(iter-init; condition; iter-action) {\u2028\taction;\u2028}"}
,{"targetRectangle":{"y":314,
"width":730,
"x":134,
"height":77}
,
"text":"There is much more to set in a for loop to get it working, but what you set is always something you’d have to do anyways with the other loops"}
,{"targetRectangle":{"y":390,
"width":786,
"x":134,
"height":126}
,
"text":"iter-init represents a single line of code to declare a variable. This variable will be used to cause the end condition to become false. Typically this is a simple integer counter:\u2028for(int cnt = 0; ..."}
,{"targetRectangle":{"y":515,
"width":474,
"x":134,
"height":74}
,
"text":"condition is exactly like a while loop’s condition:\u2028for(int cnt = 0; cnt < 10; ..."}
,{"targetRectangle":{"y":588,
"width":742,
"x":134,
"height":76}
,
"text":"And iter-action is the code that is run to change the iter-init variable, such as increment or decrement code:\u2028for(int cnt = 0; cnt < 10; cnt++) { }"}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s11.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s11.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s11.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s11.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s11.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s11.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":68,
"width":116,
"x":454,
"height":96}
,
"text":"For"}
,{"targetRectangle":{"y":420,
"width":400,
"x":134,
"height":46}
,
"text":"Back to the examples..."}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s12.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s12.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s12.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s12.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s12.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s12.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":68,
"width":630,
"x":197,
"height":96}
,
"text":"Controlling Loops"}
,{"targetRectangle":{"y":222,
"width":786,
"x":134,
"height":146}
,
"text":"Sometimes you may need exceptions in your loop logic. Perhaps you’re looking for something and don’t need to continue looping once you find it"}
,{"targetRectangle":{"y":367,
"width":683,
"x":134,
"height":111}
,
"text":"Java provides two keywords to control this logic, continue & break"}
,{"targetRectangle":{"y":477,
"width":741,
"x":134,
"height":111}
,
"text":"Continue - Skips the rest of the loop and begins the loop at the next iteration"}
,{"targetRectangle":{"y":587,
"width":701,
"x":134,
"height":77}
,
"text":"Break - Exits the loop early regardless of the loop condition"}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s13.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s13.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s13.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s13.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s13.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s13.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":68,
"width":630,
"x":197,
"height":96}
,
"text":"Controlling Loops"}
,{"targetRectangle":{"y":223,
"width":517,
"x":134,
"height":225}
,
"text":"row = 0;\u2028while(true) {\u2028\trow++;\u2028\tif (row == 1) continue;\u2028\telse if (row >= 10) break;\u2028\telse System.out.println(row);\u2028}"}
,{"targetRectangle":{"y":447,
"width":786,
"x":134,
"height":123}
,
"text":"The above code would print “23456789”. The if statement skips the first row using continue, exits the loop entirely once the 10th row is reached, and otherwise prints out the current row"}
,{"targetRectangle":{"y":569,
"width":764,
"x":134,
"height":94}
,
"text":"Note that the row++ line here is important. If it was excluded or placed after the if statements then the loop would run indefinitely as it would never increment"}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s14.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s14.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s14.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s14.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s14.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s14.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":68,
"width":630,
"x":197,
"height":96}
,
"text":"Controlling Loops"}
,{"targetRectangle":{"y":226,
"width":747,
"x":134,
"height":169}
,
"text":"When possible, try to avoid using loop control statements. While very useful they are more difficult to read than, say, this:"}
,{"targetRectangle":{"y":394,
"width":629,
"x":134,
"height":267}
,
"text":"row = 0;\u2028while(row < 10) {\u2028\trow++;\u2028\tif (row > 1) {\u2028\t\tSystem.out.println(row);\u2028\t}\u2028}"}
]
}
,{"automaticPlay":false,
"hyperlinks":[]
,
"eventInitialStates":[{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s15.b",
"hidden":0}
,{"opacity":1,
"affineTransform":[1,0,0,1,0,0]
,
"texture":"s15.a",
"hidden":0}
]
,
"eventAnimations":[{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":1}
,
"action":"hidden",
"texture":"s15.a",
"to":{"scalar":1}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s15.a"]
}
,{"effect":"none",
"actions":[{"beginTime":0,
"from":{"scalar":0}
,
"action":"hidden",
"texture":"s15.b",
"to":{"scalar":0}
,
"timingFunction":"linear",
"duration":0.001}
]
,
"duration":0.001,
"animationType":"transition",
"beginTime":0,
"textures":["s15.b"]
}
]
,
"textRegions":[{"targetRectangle":{"y":289,
"width":402,
"x":311,
"height":96}
,
"text":"Questions?"}
,{"targetRectangle":{"y":400,
"width":278,
"x":373,
"height":38}
,
"text":"Double-click to edit"}
]
}
]
,
"loopSlideshow":0,
"showMode":0,
"majorVersion":0,
"notes":{}
,
"creator":"Apple Keynote 5.3",
"author":"",
"comment":"",
"pageCount":15,
"scalefactor480":0.3310547,
"slideCount":15}
